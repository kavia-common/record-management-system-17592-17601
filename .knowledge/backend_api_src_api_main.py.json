{"is_source_file": true, "format": "Python", "description": "This file defines the main FastAPI application for the Record Management API. It sets up the API endpoints for health checks and CRUD operations on 'records', manages middleware such as CORS, and interacts with services functions for business logic. It includes route handlers for listing, creating, retrieving, updating, and deleting records.", "external_files": ["./db", "./models", "./schemas", "./services"], "external_methods": ["get_db", "list_records", "create_record", "get_record", "update_record", "delete_record"], "published": ["app"], "classes": [], "methods": [{"name": "health_check()", "description": "Health check endpoint to confirm the service is running.", "scope": "", "scopeKind": ""}, {"name": "list_records( status: Optional[str] = Query( default=None, description=\"Optional status filter (e.g., 'active', 'archived').\", ), db: Session = Depends(get_db), )", "description": "Returns a list of records, optionally filtered by status.", "scope": "", "scopeKind": ""}, {"name": "create_record(payload: RecordCreate, db: Session = Depends(get_db))", "description": "Creates a new record after validating business rules; handles exceptions for conflicts.", "scope": "", "scopeKind": ""}, {"name": "get_record( record_id: int = Path(..., description=\"The ID of the record.\"), db: Session = Depends(get_db), )", "description": "Retrieves a record by its ID, raises 404 if not found.", "scope": "", "scopeKind": ""}, {"name": "update_record( record_id: int = Path(..., description=\"The ID of the record to update.\"), changes: RecordUpdate = ..., db: Session = Depends(get_db), )", "description": "Updates an existing record with provided changes; handles not found and conflict errors.", "scope": "", "scopeKind": ""}, {"name": "delete_record( record_id: int = Path(..., description=\"The ID of the record to delete.\"), db: Session = Depends(get_db), )", "description": "Deletes a record by its ID, raises 404 if not found.", "scope": "", "scopeKind": ""}], "calls": ["services.list_records", "services.create_record", "services.get_record", "services.update_record", "services.delete_record"], "search-terms": ["FastAPI", "Record Management API", "CRUD endpoints", "records route handlers", "health check endpoint", "SQLite persistence", "CORS middleware"], "state": 2, "file_id": 3, "knowledge_revision": 18, "git_revision": "205bb9a13f8267e9d87a3f1c69fa97d494e8587c", "revision_history": [{"9": "205bb9a13f8267e9d87a3f1c69fa97d494e8587c"}, {"18": "205bb9a13f8267e9d87a3f1c69fa97d494e8587c"}], "ctags": [{"_type": "tag", "name": "app", "path": "/home/kavia/workspace/code-generation/record-management-system-17592-17601/backend_api/src/api/main.py", "pattern": "/^app = FastAPI($/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "create_record", "path": "/home/kavia/workspace/code-generation/record-management-system-17592-17601/backend_api/src/api/main.py", "pattern": "/^def create_record(payload: RecordCreate, db: Session = Depends(get_db)):$/", "language": "Python", "kind": "function", "signature": "(payload: RecordCreate, db: Session = Depends(get_db))"}, {"_type": "tag", "name": "delete_record", "path": "/home/kavia/workspace/code-generation/record-management-system-17592-17601/backend_api/src/api/main.py", "pattern": "/^def delete_record($/", "language": "Python", "kind": "function", "signature": "( record_id: int = Path(..., description=\"The ID of the record to delete.\"), db: Session = Depends(get_db), )"}, {"_type": "tag", "name": "get_record", "path": "/home/kavia/workspace/code-generation/record-management-system-17592-17601/backend_api/src/api/main.py", "pattern": "/^def get_record($/", "language": "Python", "kind": "function", "signature": "( record_id: int = Path(..., description=\"The ID of the record.\"), db: Session = Depends(get_db), )"}, {"_type": "tag", "name": "health_check", "path": "/home/kavia/workspace/code-generation/record-management-system-17592-17601/backend_api/src/api/main.py", "pattern": "/^def health_check():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "list_records", "path": "/home/kavia/workspace/code-generation/record-management-system-17592-17601/backend_api/src/api/main.py", "pattern": "/^def list_records($/", "language": "Python", "kind": "function", "signature": "( status: Optional[str] = Query( default=None, description=\"Optional status filter (e.g., 'active', 'archived').\", ), db: Session = Depends(get_db), )"}, {"_type": "tag", "name": "update_record", "path": "/home/kavia/workspace/code-generation/record-management-system-17592-17601/backend_api/src/api/main.py", "pattern": "/^def update_record($/", "language": "Python", "kind": "function", "signature": "( record_id: int = Path(..., description=\"The ID of the record to update.\"), changes: RecordUpdate = ..., db: Session = Depends(get_db), )"}], "hash": "1519656493342e8d2c3a6ecf4daef9c2", "format-version": 4, "code-base-name": "backend_api", "filename": "backend_api/src/api/main.py", "fields": [{"name": "app = FastAPI(", "scope": "", "scopeKind": "", "description": "unavailable"}]}