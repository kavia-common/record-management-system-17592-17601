{"is_source_file": true, "format": "Python", "description": "This file contains the business logic layer for managing records in the application. It defines functions for listing, creating, retrieving, updating, and deleting records, implementing specific business rules such as uniqueness constraints for active record titles and filtering by status. It interacts with database models and schemas via SQLAlchemy sessions.", "external_files": ["./models", "./schemas"], "external_methods": ["sqlalchemy.select", "sqlalchemy.orm.Session", "db.scalars", "db.get", "db.add", "db.commit", "db.refresh", "db.delete"], "published": ["list_records", "create_record", "get_record", "update_record", "delete_record"], "classes": [], "methods": [{"name": "List[Record] list_records(db: Session, status: Optional[str] = None)", "description": "Returns a list of records, optionally filtered by status, ordered by creation date descending.", "scope": "", "scopeKind": ""}, {"name": "Record create_record(db: Session, payload: RecordCreate)", "description": "Creates a new record, enforcing a uniqueness business rule for active records' titles, and defaults status to 'active' if not provided.", "scope": "", "scopeKind": ""}, {"name": "Optional[Record] get_record(db: Session, record_id: int)", "description": "Fetches a single record by its ID.", "scope": "", "scopeKind": ""}, {"name": "Record update_record(db: Session, record_id: int, changes: RecordUpdate)", "description": "Updates a record with the provided changes, enforcing uniqueness constraints on active titles.", "scope": "", "scopeKind": ""}, {"name": "Tuple[bool,Optional[int]] delete_record(db: Session, record_id: int)", "description": "Deletes a record by its ID, returning a tuple indicating success and the record ID.", "scope": "", "scopeKind": ""}], "calls": ["sqlalchemy.select", "db.scalars", "db.get", "db.add", "db.commit", "db.refresh", "db.delete"], "search-terms": ["business logic", "record management", "SQLAlchemy", "create_record", "update_record"], "state": 2, "file_id": 8, "knowledge_revision": 17, "git_revision": "", "ctags": [{"_type": "tag", "name": "create_record", "path": "/home/kavia/workspace/code-generation/record-management-system-17592-17601/backend_api/src/api/services.py", "pattern": "/^def create_record(db: Session, payload: RecordCreate) -> Record:$/", "language": "Python", "typeref": "typename:Record", "kind": "function", "signature": "(db: Session, payload: RecordCreate)"}, {"_type": "tag", "name": "delete_record", "path": "/home/kavia/workspace/code-generation/record-management-system-17592-17601/backend_api/src/api/services.py", "pattern": "/^def delete_record(db: Session, record_id: int) -> Tuple[bool, Optional[int]]:$/", "language": "Python", "typeref": "typename:Tuple[bool,Optional[int]]", "kind": "function", "signature": "(db: Session, record_id: int)"}, {"_type": "tag", "name": "get_record", "path": "/home/kavia/workspace/code-generation/record-management-system-17592-17601/backend_api/src/api/services.py", "pattern": "/^def get_record(db: Session, record_id: int) -> Optional[Record]:$/", "language": "Python", "typeref": "typename:Optional[Record]", "kind": "function", "signature": "(db: Session, record_id: int)"}, {"_type": "tag", "name": "list_records", "path": "/home/kavia/workspace/code-generation/record-management-system-17592-17601/backend_api/src/api/services.py", "pattern": "/^def list_records(db: Session, status: Optional[str] = None) -> List[Record]:$/", "language": "Python", "typeref": "typename:List[Record]", "kind": "function", "signature": "(db: Session, status: Optional[str] = None)"}, {"_type": "tag", "name": "update_record", "path": "/home/kavia/workspace/code-generation/record-management-system-17592-17601/backend_api/src/api/services.py", "pattern": "/^def update_record(db: Session, record_id: int, changes: RecordUpdate) -> Record:$/", "language": "Python", "typeref": "typename:Record", "kind": "function", "signature": "(db: Session, record_id: int, changes: RecordUpdate)"}], "hash": "8ea3199a1af5ef584a03cb3152a8e176", "format-version": 4, "code-base-name": "backend_api", "filename": "backend_api/src/api/services.py", "revision_history": [{"17": ""}]}